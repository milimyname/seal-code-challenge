import jwt from 'jsonwebtoken'
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import { useRouter } from "next/router"
import { MouseEvent, useEffect, useState, useCallback} from "react";
import {server} from '../../config/config'


const Preview = ( ) => {
  const [tokenToVerify, setTokenToVerify] = useState<string | null>(null);
  const [doc, setDoc] = useState<{name : string[], url: string[]} | null>(null);
  const router = useRouter();
  const {FileId} = router.query as { FileId: string };

  const getDocById = useCallback(async () => {
    const data = await (await fetch(`/api/getDoc/${FileId}`)).json();
    setDoc(data);
  }, [FileId]);

  useEffect(()=>{
    getDocById();
  },[ getDocById])

  const previewFile =  () =>{

    if(!FileId || !doc) return;

    if(doc.name[0].split('.')[1] === 'jpg' || doc.name[0].split('.')[1] === 'png' || doc.name[0].split('.')[1] === 'jpeg')
      return <Image src={doc.url[0]} width={'100%'} height={'100%'} alt={`${doc.name[0].split('.')[0]}`} />
     else 
      return <iframe src={doc.url[0]} width={`100%`} height={'680'}></iframe>
    
  }


  const handleCopyLink = async (e: MouseEvent<HTMLButtonElement>)=>{
    e.preventDefault();

    if(tokenToVerify) return;

    const token = await fetch(`/api/share`, {
      method: 'POST',
      body: JSON.stringify({
        url: `${server}/preview/${FileId}`
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    })

    const tokenData = await token.json();
    setTokenToVerify(tokenData)
    await navigator.clipboard.writeText(`${server}/shareableLink?tokenId=${tokenData}&FileId=${FileId}`);
    alert('Copied to clipboard. Valid for 1 hour.');
  }

  return (
    <div className='max-w-6xl mx-auto md:px-12'>
      <Head>
        <title>SEAL Code Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className='flex justify-between items-center pt-20'>
        <Link href='../'>
          <a className="text-2xl text-white bg-[#2386C9] rounded-lg px-12 py-4 transition hover:translate-y-1 sm:text-xl sm:px-8 sm:py-2">
            Back
          </a>
        </Link>
        <div className='flex items-center gap-10'>
          <h1 className="text-4xl text-white">
            {doc?.name[0].split('.')[0]}
          </h1>
          <button className="text-2xl text-white bg-text rounded-lg px-12 py-4 cursor-pointer sm:text-xl sm:px-8 sm:py-2" onClick={handleCopyLink}>
            Share
          </button>
        </div>
      </header>

      <main className='pt-10'>
        {previewFile()}
      </main>

    </div>
  )
}

export default Preview